<style>
  .cat {
    position: absolute;
    top: 100px;
    left: 5%;
    z-index: 1;
  }

  .hidden {
    display: none;
  }

  .visible {
    display: block;
  }

  #weather-dialog {
    display: none;
    position: fixed;
    inset: 0;
    background-color: rgba(75, 85, 99, 0.5);
    align-items: center;
    justify-content: center;
    z-index: 10;
  }

  #weather-dialog.visible {
    display: flex;
    animation: popIn 0.5s cubic-bezier(0.175, 0.885, 0.320, 1.275) forwards;
  }

  .dialog-content {
    background: white;
    border: 2px solid black;
    padding: 20px;
    border-radius: 10px;
    position: relative;
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.25);
    text-align: center;
    display: flex;
    flex-direction: column;
  }

  #weather-icon {
    width: 100px;
    height: 100px;
    border: 2px solid #31B6C0;
    border-radius: 25px;
    background: #31B6C0;
    margin-bottom: 20px;
    display: flex;
    margin-inline: auto;
  }

  @keyframes popIn {
    0% {
      transform: scale(0);
      opacity: 0;
    }

    70% {
      transform: scale(1.2);
      opacity: 1;
    }

    100% {
      transform: scale(1);
      opacity: 1;
    }
  }

  .dialog-content {
    background: linear-gradient(135deg, #fafafa 50%, #f6f6f6 50%);
    border: 4px solid #074464;

    color: #2a2a2a;
  }
</style>


<!-- the account icon to the right of the search bar -->
<div class="navbar">
  <div class="account-icon">
    <a href="/account">
      <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="44" height="44" viewBox="0 0 64 64" id="Account">
        <path
          d="M32,2A30.034,30.034,0,0,0,2,32a29.6307,29.6307,0,0,0,1.1387,8.1758,1,1,0,1,0,1.9218-.5518A27.64,27.64,0,0,1,4,32a28,28,0,0,1,56,0,27.64,27.64,0,0,1-1.06,7.624,1,1,0,1,0,1.9218.5518A29.6307,29.6307,0,0,0,62,32,30.034,30.034,0,0,0,32,2Z"
          fill="#074464" class="color000000 svgShape"></path>
        <path
          d="M37.8383,35.5991a13,13,0,1,0-11.6766,0,28.89,28.89,0,0,0-16.5474,9.97,5.0514,5.0514,0,0,0,.1484,6.564,29.9923,29.9923,0,0,0,44.4746,0,5.0514,5.0514,0,0,0,.1484-6.564A28.89,28.89,0,0,0,37.8383,35.5991Z"
          fill="#074464" class="color000000 svgShape"></path>
      </svg>
    </a>
  </div>

  <!-- the geocoder search bar -->
  <div id="geocoder" class="geocoder"></div>

  <!-- the home icon to the left of the search bar -->
  <div class="home-icon">
    <a href="/postlogin">
      <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="44" height="44" viewBox="0 0 48 48"
        style="fill:#074464;">
        <path
          d="M39.5,43h-9c-1.381,0-2.5-1.119-2.5-2.5v-9c0-1.105-0.895-2-2-2h-4c-1.105,0-2,0.895-2,2v9c0,1.381-1.119,2.5-2.5,2.5h-9	C7.119,43,6,41.881,6,40.5V21.413c0-2.299,1.054-4.471,2.859-5.893L23.071,4.321c0.545-0.428,1.313-0.428,1.857,0L39.142,15.52	C40.947,16.942,42,19.113,42,21.411V40.5C42,41.881,40.881,43,39.5,43z">
        </path>
      </svg>
    </a>
  </div>
</div>

<!-- the weather (cat) icon in the left bottom of the search bar -->
<div class="cat">
  <!-- Cat icon, initially hidden -->
  <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-cat hidden" width="44" height="44"
    viewBox="0 0 24 24" stroke-width="1.5" stroke="#ff9300" fill="none" stroke-linecap="round" stroke-linejoin="round">
    <path stroke="none" d="M0 0h24v24H0z" fill="none" />
    <path
      d="M20 3v10a8 8 0 1 1 -16 0v-10l3.432 3.432a7.963 7.963 0 0 1 4.568 -1.432c1.769 0 3.403 .574 4.728 1.546l3.272 -3.546z" />
    <path d="M2 16h5l-4 4" />
    <path d="M22 16h-5l4 4" />
    <path d="M12 16m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    <path d="M9 11v.01" />
    <path d="M15 11v.01" />
  </svg>
</div>

<div id="weather-dialog" class="hidden">
  <div class="dialog-content" class="container">
    <h3 class="text-lg font-bold mb-2">Today's Weather from Cat Reporter</h3>
    <img id="weather-icon" src="" alt="Weather Icon">
    <p id="weather-info"></p>
    <button class="mt-4 px-4 py-2 bg-buttonBg text-white rounded hover:bg-blue-700"
      onclick="closeWeatherDialog()">Close</button>
  </div>
</div>


<!-- the map -->
<div id='map'></div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const homeButton = document.querySelector('.home-icon a');
    const catIcon = document.querySelector('.icon-tabler-cat');
    const weatherDialog = document.getElementById('weather-dialog');
    const weatherInfo = document.getElementById('weather-info');
    const weatherIcon = document.getElementById('weather-icon');
    let touchTimer;
    let longPressActivated = false;

    homeButton.addEventListener('touchstart', function (e) {
      touchTimer = setTimeout(() => {
        longPressActivated = true;
        catIcon.classList.remove('hidden');
        catIcon.classList.add('visible');
        e.preventDefault();
      }, 500);
    });

    homeButton.addEventListener('touchend', function () {
      clearTimeout(touchTimer);
      if (!longPressActivated) {
        window.location.href = this.href;
      }
      longPressActivated = false;
    });

    homeButton.addEventListener('touchcancel', function () {
      clearTimeout(touchTimer);
      longPressActivated = false;
    });

    catIcon.addEventListener('click', function () {
      fetchWeather();
    });

    function fetchWeather() {
      const cityName = 'Vancouver';
      fetch(`/weather?cityName=${cityName}`)
        .then(response => response.json())
        .then(data => {
          const iconCode = data.weather[0].icon;
          const iconUrl = `https://openweathermap.org/img/wn/${iconCode}@2x.png`;
          weatherIcon.src = iconUrl;

          const message = getFunnyWeatherMessage(data);
          weatherInfo.textContent = message;

          showWeatherDialog();
        })
        .catch(error => {
          console.error('Error fetching weather:', error);
          weatherInfo.textContent = 'Failed to fetch weather data. It might be cloudy with a chance of data loss.';
        });
    }

    function getFunnyWeatherMessage(data) {
      const temp = data.main.temp;
      const description = data.weather[0].description.toLowerCase();
      const city = data.name;

      if (temp < 0) {
        return `It's freezing in ${city} at ${temp}°C with ${description}! Stay inside unless you're a polar bear.`;
      } else if (description.includes('rain')) {
        return `It's raining in ${city} at ${temp}°C with ${description} — perfect weather to catch up on some indoor hobbies unless you prefer splashing around.`;
      } else {
        return `With ${description} and ${temp}°C, it's a typical day in ${city}. Why not enjoy a nice walk outside?`;
      }

    }

    function showWeatherDialog() {
      weatherDialog.classList.add('visible');
      weatherDialog.style.display = 'flex';
    }

    window.closeWeatherDialog = function () {
      weatherDialog.classList.remove('visible');
      setTimeout(() => {
        weatherDialog.style.display = 'none';
      }, 500);
    }
  });
</script>