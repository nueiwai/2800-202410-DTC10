<%- include('templates/header') %>
  <!-- the account icon to the right of the search bar -->
  <div class="account-icon">
    <a href="/account">
      <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="44" height="44" viewBox="0 0 64 64" id="Account">
        <path
          d="M32,2A30.034,30.034,0,0,0,2,32a29.6307,29.6307,0,0,0,1.1387,8.1758,1,1,0,1,0,1.9218-.5518A27.64,27.64,0,0,1,4,32a28,28,0,0,1,56,0,27.64,27.64,0,0,1-1.06,7.624,1,1,0,1,0,1.9218.5518A29.6307,29.6307,0,0,0,62,32,30.034,30.034,0,0,0,32,2Z"
          fill="#074464" class="color000000 svgShape"></path>
        <path
          d="M37.8383,35.5991a13,13,0,1,0-11.6766,0,28.89,28.89,0,0,0-16.5474,9.97,5.0514,5.0514,0,0,0,.1484,6.564,29.9923,29.9923,0,0,0,44.4746,0,5.0514,5.0514,0,0,0,.1484-6.564A28.89,28.89,0,0,0,37.8383,35.5991Z"
          fill="#074464" class="color000000 svgShape"></path>
      </svg>
    </a>
  </div>

  <h1
    style="text-align: center; margin: 20px 0; position: absolute; left: 50%; transform: translateX(-50%); z-index: 1; color: black; font-size:xx-large; font-weight:800; font-family: 'Nunito', sans-serif; letter-spacing: 2px;">
    Dronify</h1>

  <!-- the home icon to the left of the search bar -->
  <div class="home-icon">
    <a href="/postlogin">
      <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="44" height="44" viewBox="0 0 48 48"
        style="fill:#074464;">
        <path
          d="M39.5,43h-9c-1.381,0-2.5-1.119-2.5-2.5v-9c0-1.105-0.895-2-2-2h-4c-1.105,0-2,0.895-2,2v9c0,1.381-1.119,2.5-2.5,2.5h-9	C7.119,43,6,41.881,6,40.5V21.413c0-2.299,1.054-4.471,2.859-5.893L23.071,4.321c0.545-0.428,1.313-0.428,1.857,0L39.142,15.52	C40.947,16.942,42,19.113,42,21.411V40.5C42,41.881,40.881,43,39.5,43z">
        </path>
      </svg>
    </a>
  </div>

  <div class="w-full bg-cardBg h-full fixed bottom-0 left-1/2 transform -translate-x-1/2 pt-56 font-Nunito">

    <div class="flex flex-col items-center" style="transform: translateY(-80px)">
      <img class="w-40 h-40 mb-3 rounded-full shadow-lg"
        src="<%= user.profileImageUrl ? user.profileImageUrl : 'profile.png' %>" alt="Profile image" />

      <div class="flex flex-col items-center space-y-6 mt-6">
        <select id="cardType"
          class="w-11/12 py-2 px-6 text-sm font-medium text-center text-gray-900 bg-white border border-gray-300 rounded-xl focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-300">
          <option class="" value="">Select Card Type</option>
          <option class="" value="Debit">Debit</option>
          <option class="" value="Credit">Credit</option>
          <option class="" value="Crypto">Crypto</option>
        </select>
        <input type="text" id="cardNumber"
          class="w-11/12 py-2 px-6 text-sm font-medium text-center text-gray-900 bg-white border-gray-300 rounded-xl focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-300"
          placeholder="*  Card Number">
        <input type="text" id="cvv"
          class="w-11/12 py-2 px-6 text-sm font-medium text-center text-gray-900 bg-white border-gray-300 rounded-xl focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-300"
          placeholder="*  CVV">
        <input type="text" id="expiryDate"
          class="w-11/12 py-2 px-6 text-sm font-medium text-center text-gray-900 bg-white border-gray-300 rounded-xl focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-300"
          placeholder="*  Expiry Date   MM/YY">
      </div>

    </div>

    <div class="flex justify-center mt-[-50px]">
      <button onclick="window.location.href='/payment_list'"
        class="w-28 py-2 px-8 mt-2 mx-2 text-md font-medium text-center text-white bg-black rounded-xl hover:bg-red-600 focus:ring-4 focus:outline-none focus:ring-red-300 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-800">Cancel</button>

      <button id="savePaymentBtn"
        class="w-28 py-2 px-8 mt-2 mx-2 text-md font-medium text-center text-white bg-red-600 rounded-xl hover:bg-red-600 focus:ring-4 focus:outline-none focus:ring-red-300 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-800">Save</button>
    </div>

    <br>
    <div id="error-message" class="font-bold text-red-500 mb-4 text-center"></div>

    <div id="error-message" class="text-red-500 mb-4 text-center"></div>
  </div>



  <script>
    /*
    The following regular expressions are generated by ChatGPT 4.0
    @author https://chat.openai.com/
    */
    document.addEventListener('DOMContentLoaded', function () {
      const ids = ['cardType', 'cardNumber', 'cvv', 'expiryDate'];
      ids.forEach(id => {
        if (!document.getElementById(id)) {
          console.error(`Element with ID ${id} not found.`);
        }
      });

      const savePaymentBtn = document.getElementById("savePaymentBtn");
      if (!savePaymentBtn) {
        console.error("Save payment button not found.");
        return;
      }

      // add event listener to cardNumber input to remove extra spaces and limit input length to 16 digits
      const cardNumberInput = document.getElementById('cardNumber');
      if (cardNumberInput) {
        cardNumberInput.addEventListener('input', function () {
          let value = this.value.replace(/\D/g, '');
          if (value.length > 16) {
            value = value.substring(0, 16);
          }
          this.value = value.replace(/(\d{4})(?=\d)/g, '$1 ');
        });
      }

      // add event listener to cvv input to remove extra spaces and limit input length to 3 digits
      const cvvInput = document.getElementById('cvv');
      if (cvvInput) {
        cvvInput.addEventListener('input', function () {
          let value = this.value.replace(/\D/g, '');
          if (value.length > 3) {
            value = value.substring(0, 3);
          }
          this.value = value;
        });
      }

      // add event listener to expiryDate input to remove extra spaces and format input as MM/YY
      const expiryDateInput = document.getElementById('expiryDate');
      if (expiryDateInput) {
        expiryDateInput.addEventListener('input', function () {
          // remove all non-numeric characters except the slash
          let value = this.value.replace(/[^0-9\/]/g, '');
          // remove leading slashes and multiple slashes
          value = value.replace(/^\/+/, '').replace(/\/+/g, '/');
          // limit the input length to 5 characters
          if (value.length > 5) {
            value = value.substring(0, 5);
          }
          // automatically add a slash after the second digit
          if (!value.includes('/') && value.length > 2) {
            value = value.substring(0, 2) + '/' + value.substring(2);
          }
          this.value = value;
        });
      }

      savePaymentBtn.addEventListener("click", async () => {
        const paymentInfo = ids.reduce((acc, id) => {
          const elem = document.getElementById(id);
          if (elem) {
            acc[id] = elem.value.trim();
          }
          return acc;
        }, {});

        console.log(paymentInfo);

        const errorMessageElement = document.getElementById('error-message');
        let errorMessage = '';

        if (!paymentInfo.cardType) {
          errorMessage = 'Card Type is required.';
        } else if (paymentInfo.cardNumber.length < 16) {
          errorMessage = 'Card Number must be 16 digits.';
        } else if (paymentInfo.cvv.length < 3) {
          errorMessage = 'CVV must be 3 digits.';
        } else if (!/^\d{2}\/\d{2}$/.test(paymentInfo.expiryDate)) {
          errorMessage = 'Expiry Date must be in MM/YY format.';
        }

        if (errorMessage) {
          errorMessageElement.textContent = errorMessage;
          return;
        } else {
          errorMessageElement.textContent = '';
        }

        try {
          const response = await fetch("/payment_edit", {
            method: "POST",
            headers: {
              "Content-Type": "application/json; charset=UTF-8"
            },
            body: JSON.stringify(paymentInfo)
          });

          const result = await response.json();
          if (result.success) {
            alert("Payment information saved successfully!");
            window.location.href = '/payment_list';
          } else {
            const errors = result.errors.map(error => `${error.field}: ${error.message}`).join('\n');
            alert("Error updating payment information:\n" + errors);
          }
        } catch (error) {
          console.error("Failed to send request:", error);
          alert("Failed to send request: " + error.message);
        }
      });
    });
  </script>

  <%- include('templates/footer') %>